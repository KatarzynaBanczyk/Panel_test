wifi:
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  power_save_mode: none
  ap:
    ssid: "${device_name}"
    password: 1

external_components:
  - source: github://pr#2956
    components: [nextion]
    refresh: 1h

esphome:
  name: ${device_name}

esp32:
  board: esp32dev

captive_portal:

web_server:
  port: 80

ota:
  password: ${wifi_password}
  safe_mode: true
  reboot_timeout: 3min
  num_attempts: 3

logger:
#  baud_rate: 0
#  level: WARN

output:
  - platform: ledc
    id: buzzer_out
    pin:
      number: 21

rtttl:
  id: buzzer
  output: buzzer_out

uart:
  tx_pin: 16
  rx_pin: 17
  baud_rate: 115200
  id: tf_uart

button:
  - platform: restart
    name: ${device_name} Restart
    id: restart_nspanel

api:
  services:
    - service: upload_tft
      then:
        - lambda: "id(disp1).upload_tft();"
 
 display:
  - platform: nextion
    id: disp1
    uart_id: tf_uart
    tft_url: ${nextion_update_url}
    on_setup:
      then:
        - lambda: id(disp1).send_command_printf("page 8");
        - lambda: id(disp1).set_component_text_printf("boot.esph_version", "%s", "3.1.0"); ### esphome-version ###
        - wait_until: api.connected
        - lambda: id(disp1).set_component_text_printf("boot.ip_addr", "%s", id(ip_address).state.c_str());
        - delay: 0.5s
        - number.set:
            id: display_brightness
            value: !lambda "return id(display_brightness_global);"
        - number.set:
            id: display_dim_brightness
            value: !lambda "return id(display_dim_brightness_global);"
        - lambda: id(disp1).set_component_text_printf("settings.a03", "%i", id(display_brightness_global));
        - lambda: id(disp1).set_component_text_printf("settings.a04", "%i", id(display_dim_brightness_global));
        - lambda: id(disp1).send_command_printf("settings.brightslider.val=%i", id(display_brightness_global));
        - lambda: id(disp1).send_command_printf("settings.dimslider.val=%i", id(display_dim_brightness_global));
        - lambda: id(disp1).send_command_printf("home.sleepmodus.val=%i", id(sleep_modus_global));
        - lambda: id(disp1).set_component_value("settings.a02", id(sleep_modus_global) == 1);
        - delay: 0.5s
        - switch.template.publish:
            id: nextion_init
            state: on